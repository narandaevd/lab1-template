name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: backend
        run: npm install

      - name: Build TypeScript project
        working-directory: backend
        run: npm run build

      - name: Build Docker image
        working-directory: backend
        run: |
          docker build -t rsoi_lab1 --file ../Dockerfile .

      - name: Save Docker image as tar
        run: |
          docker save rsoi_lab1 > rsoi_lab1.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: rsoi_lab1
          path: rsoi_lab1.tar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: backend
        run: npm install

      - name: Run tests
        working-directory: backend
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: rsoi_lab1

      - name: Get commit hash
        id: get_commit_hash
        run: echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Install ssh keys
        run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.REMOTE_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to remote server
        run: |
          scp rsoi_lab1.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            docker ps --filter name=rsoi_lab1_* --filter status=running -aq | xargs docker stop | xargs docker rm
            cd /tmp
            docker load < rsoi_lab1.tar
            cd /app/rsoi_lab1
            docker run -d --name rsoi_lab1_${{ env.COMMIT_HASH }} --network host rsoi_lab1
          EOF

  autograding:
    name: Autograding
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          environment: postman/[inst][heroku] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true
